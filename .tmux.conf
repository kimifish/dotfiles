# vim: fdm=marker
# remap prefix
# C-b is not acceptable -- Vim uses it
# unbind-key -a
set-option -g prefix C-a
set-option -g prefix2 M-F1
set -sg escape-time 10

unbind '"'
unbind %
unbind -n C-h

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# # another TMUX session
bind-key a send-prefix
bind-key C-a send-prefix
bind-key M-F1 send-prefix -2

# Rather than constraining window size to the maximum size of any client 
# # connected to the *session*, constrain window size to the maximum size of any 
# # client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

#bind -n C-Home switch-client -p
bind -n C-End switch-client -n
bind -n M-C-j switch-client -p
bind -n M-C-k switch-client -n
bind -n C-KP7 switch-client -p
bind -n C-KP1 switch-client -n

#bind -n M-C-Home send-keys C-a;switch-client -p
#bind -n M-C-End send-keys C-a;switch-client -n

# Panes {{{
# start with pane 1
set -g pane-base-index 1

 # hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# switch panes using Meta-arrow without prefix
bind -n M-h select-pane -L
bind -n M-l select-pane -R
bind -n M-k select-pane -U
bind -n M-j select-pane -D

# split panes using | and -
bind | split-window -h
bind - split-window -v

# }}}

# Windows {{{
# start with window 1 (instead of 0)
set -g base-index 1

# switch windows using Meta-PgUp&Dn keys
bind -n C-PgUp previous-window
bind -n C-PgDn next-window
bind -n M-C-h previous-window
bind -n M-C-l next-window
bind -n C-h previous-window
bind -n C-l next-window
bind -n C-S-PgUp {
    swap-window -t -1 
	select-window -t -1
	}
bind -n C-S-PgDn { 
    swap-window -t +1 
	select-window -t +1
	}

bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

bind -n M-PgUp send-keys C-PgUp #previous-window
bind -n M-PgDn send-keys C-PgDn #next-window
bind -n M-C-PgUp send-keys C-a C-S-PgUp #previous-window
bind -n M-C-PgDn send-keys C-a C-S-PgDn #next-window

#bind -n C-KP9 previous-window
#bind -n C-KP3 next-window
#bind -n C-S-KP9 swap-window -t -1 #\; select-window -t -1
#bind -n C-S-KP3 swap-window -t +1 #\; select-window -t +1

#bind -n M-KP9 send-keys C-PgUp #previous-window
#bind -n M-KP3 send-keys C-PgDn #next-window
#bind -n M-C-KP9 send-keys C-a C-S-PgUp #previous-window
#bind -n M-C-KP3 send-keys C-a C-S-PgDn #next-window

# }}}

# Mouse {{{
# Enable mouse control (clickable windows, panes, resizable panes)
# set -g mouse-select-window on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on

# Enable mouse mode (tmux 2.1 and above)
#set -g mouse-utf8 on
set -g mouse on

# }}}

# Copy-paste stuff {{{
# enable vi mode keys
set-window-option -g mode-keys vi
#bind -t vi-copy 'v' begin-selection
#bind -t vi-copy 'y' copy-pipe "xclip -i"

unbind p
bind p paste-buffer

unbind [
bind [ copy-mode

# copy & paste between tmux and x clipboard
# Now, when you press <Control> Ctrl-p, it will put the content of x clipboard into Tmux buffer and paste it.
bind C-p run-shell "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"

# <Control> Ctrl-y will put Tmux top buffer content into x clipboard.
bind C-y run-shell "tmux show-buffer | xsel -i -b"

# Vi copypaste mode
set-window-option -g mode-keys vi
# }}}

# Visual Activity Monitoring between windows
setw -g monitor-activity on
set -g visual-activity on
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

#set -g default-terminal "tmux-256color"
set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ",xterm-kitty:RGB"

# Show tmux positions in titles
set -g set-titles on

# from powerline
#run-shell "tmux set-environment -g TMUX_VERSION_MAJOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1 | sed 's/[^0-9]*//g')"
#run-shell "tmux set-environment -g TMUX_VERSION_MINOR $(tmux -V | cut -d' ' -f3 | cut -d'.' -f2 | sed 's/[^0-9]*//g')"

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf \;\
	display 'tmux config reloaded.'
bind R refresh-client

# Design {{{
#
set -g main-pane-width 140

    # The modes {{{
    setw -g clock-mode-colour colour135
    #setw -g mode-attr bold
    #setw -g mode-fg colour196
    #setw -g mode-bg colour238
    set -g mode-style fg=colour196,bg=colour238,bold
    
    # }}}
    # The panes {{{
    set -g pane-border-style fg=colour$PAL_COL0,bg=colour0
    set -g pane-active-border-style fg=colour$PAL_COL2,bg=colour0
    # }}}
    # The statusbar {{{
    set -g status-justify left
    set -g status-interval 2
    set -g status-position bottom

    #set -g @hfg 'colour16' # Hostname FOREground
    #set -g @cbg 'colour58'   # Common status background
    #set -g @wcb 'colour220'  # Current window label background
    #set -g @wcf 'colour234'  # Current window label foreground
    #set -g @wsb 'colour234'  # Window label background
    #set -g @wsf 'colour136'  # Window label foreground

    set -g status-style fg=colour0,bg=colour59

    run-shell "case $(hostname) in \
    	kimipc)   tmux set -g @hostname 'kimiPC  ' ;; \
	kimitop)  tmux set -g @hostname 'kimiTop ' ;; \
	kimihome) tmux set -g @hostname 'kimiHome' ;; \
	kimiPad)  tmux set -g @hostname 'kimiPad ' ;; \
	Vault)    tmux set -g @hostname 'Vault   ' ;; \
	ip-*|AWS|amnezia) tmux set -g @hostname 'VPS     ' ;; \
	*)        tmux set -g @hostname $(hostname) ;; \
	esac"

    # Here we are retrieving color palette (uniq for every host)
    # from environment vars, which set by .bashrc.d/palette
    #
    # Hostname colors
    run-shell 'tmux setw -g @hfg "colour$PAL_COL0"' # hostname foreground 
    run-shell 'tmux setw -g @hbg "colour$PAL_COL3"' # hostname background 
    # Session name colors
    run-shell 'tmux setw -g @sfg "colour$PAL_COL4"' # session foreground 
    run-shell 'tmux setw -g @sbg "colour$PAL_COL2"' # session background 
    # Windows list colors
    run-shell 'tmux setw -g @wsf "colour$PAL_COL4"' # window tag foreground 
    run-shell 'tmux setw -g @wsb "colour$PAL_COL1"' # window tag background
    run-shell 'tmux setw -g @wcf "colour$PAL_COL1"' # window current tag foreground 
    run-shell 'tmux setw -g @wcb "colour$PAL_COL4"' # window current tag background 
    run-shell 'tmux setw -g @cbg "colour$PAL_COL2"' # common background 
    # Date colors
    run-shell 'tmux setw -g @dtf "colour$PAL_COL1"' # date foreground 
    run-shell 'tmux setw -g @dtb "colour$PAL_COL4"' # date background 
    # Time colors
    run-shell 'tmux setw -g @tmf "colour$PAL_COL3"' # time foreground 
    run-shell 'tmux setw -g @tmb "colour$PAL_COL0"' # time background 

    run-shell 'tmux setw -g status-style "bg=colour$PAL_COL2"'

    set -g status-right-length 90
    set -g status-left-length 20

    set -g status-left '\
	#[none]\
	#[bg=#{@hbg},fg=#{@hfg},bold] \
	#{@hostname} \
	#[fg=#{@hbg},bg=#{@cbg}]\
	#[fg=#{@sfg},bg=#{@sbg}]#S\
	#[none]' #[fg=#{@hostfg},bg=#{@lbg}]"

    set -g window-status-current-format '\
	#[none]\
	#[fg=#{@cbg},bg=#{@wcb}]\
	#[fg=#{@wcf},bg=#{@wcb}] #W\
	#[fg=#{@cbg}]•\
	#[fg=#{@wcb},bg=#{@cbg}]'

    set -g window-status-format '\
	#[none]\
	#[fg=#{@cbg},bg=#{@wsb}]\
	#[fg=#{@wsf}] #W\
	#[fg=#{@cbg}]•\
	#[fg=#{@wsb},bg=#{@cbg}]'  #[nounderscore]'

#    set -g disk1 ''
#    run-shell "case $(hostname) in \
#	kimitop)  tmux set -g @disk1 'ubuntu' ;; \
#	kimihome) tmux set -g @disk1 '/dev/root' ;; \
#	Vault)    tmux set -g @disk1 '/dev/root' ;; \
#	*)        tmux set -g @disk1 '' ;; \
#	esac"

    set -g status-right '\
	#{prefix_highlight}\
	#[fg=#{@wsb},bg=#{@cbg}]#[fg=#{@dtb},bg=#{@wsb}]\
	#[fg=#{@dtf},bg=#{@dtb},bold] \
	%d/%m %a \
	#[fg=#{@tmb},bg=#{@dtb}]\
	#[fg=#{@tmf},bg=#{@tmb},bold] \
	%H:%M '
    set -g window-status-separator ''
    set -g window-status-bell-style fg=colour255,bg=colour233,bold

    run-shell "tmux source-file ~/.tmux/$(hostname).conf" 

    
    # }}}
    # The messages {{{
    set -g message-style fg=colour232,bg=colour166,bold
    set -g message-command-style fg=blue,bg=black
    # }}}
# }}}

# Tmux Plugin Manager {{{

# List of plugins
set -g @plugin 'jaclu/tmux-menus'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-sidebar'
# set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'jbnicolai/tmux-fpp'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'jaclu/tmux-power-zoom'

# Tmux Mode indicator {{{
set -g @plugin 'MunifTanjim/tmux-mode-indicator'
# prompt to display when tmux prefix key is pressed
set -g @mode_indicator_prefix_prompt '  '

# prompt to display when tmux is in copy mode
set -g @mode_indicator_copy_prompt '  '

# prompt to display when tmux has synchronized panes
set -g @mode_indicator_sync_prompt '  '

# prompt to display when tmux is in normal mode
set -g @mode_indicator_empty_prompt '  '

# style values for prefix prompt
set -g @mode_indicator_prefix_mode_style 'bg=blue,fg=black'

# style values for copy prompt
set -g @mode_indicator_copy_mode_style 'bg=yellow,fg=black'

# style values for sync prompt
set -g @mode_indicator_sync_mode_style 'bg=red,fg=black'

# style values for empty prompt
set -g @mode_indicator_empty_mode_style 'bg=#{@tmb},fg=#{@tmf}'

# prompt to display instead of default mode indicators
#set @mode_indicator_custom_prompt '   '

# style values for custom prompt
#set @mode_indicator_custom_mode_style 'default'
# }}}

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# }}}
